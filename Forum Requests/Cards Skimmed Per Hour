// ==UserScript==
// @name         Card Skimming Rate
// @namespace    hardy.card.skim.rate
// @version      0.1
// @description  Shows the rate of card skimming on Card Skimming Page
// @author       Father [2131687]
// @match        https://www.torn.com/loader.php?sid=crimes*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=torn.com
// ==/UserScript==

(function() {
    'use strict';
    let waitObj = {};
    window.onhashchange = initiate;
    initiate();
    function initiate() {
        const page = window.location.href;
        if (page.includes("/cardskimming")) {
            waitForElement(`div[class^="crimeOptionGroup"]`, 700, 999, "djhadgj").then((element) => {
                const nodeParent = document.querySelectorAll('div[class^="crimeOptionGroup"]')[1];
                if (nodeParent) {
                    const nodeList = nodeParent.querySelectorAll('div[class^="crimeOption_"]');
                    for (const node of nodeList) {
                        const timeNode = node.querySelector('div[class*="timeSection_"]');
                        const str = timeNode.innerText.trim();
                        const hr = convertTimeToHours(str);
                        const countNode = node.querySelector('span[class*="statusCards_"]');
                        const count = countNode? parseInt(countNode.innerText.trim()) : 0;
                        node.querySelector('div[class*="crimeOptionSection_"]').innerText += calculateRate(hr, count);
                    }
                }
            }).catch(error => {
                console.log(error);
            });
        } else {
            waitObj.djhadgj = 0;
        }
    }
    function waitForElement(selector, duration, maxTries, identifier) {
        return new Promise(function(resolve, reject) {
            const value = Math.floor(Math.random() * 1000000000);
            waitObj[identifier] = value;
            let attempts = 0;
            const intervalId = setInterval(() => {
                if (attempts > maxTries){
                    clearInterval(intervalId);
                    reject(`Element Listener Expired: ${selector}, Reason: Dead coz u didnt cum on time!!!!`);
                } else if (waitObj[identifier] !== value) {
                    clearInterval(intervalId);
                    reject(`Element Listener Expired: ${selector}, Reason: Dead coz u didnt luv me enough and got another LiStEnEr!!!!`);
                }
                const element = document.querySelector(selector);
                if (element) {
                    clearInterval(intervalId);
                    resolve(element);
                }
                attempts += 1;
            }, duration);
        });
    }
    function convertTimeToHours(timeString) {
        const timeParts = timeString.split(', ');
        let totalHours = 0;
        for (const part of timeParts) {
            const words = part.split(' ');
            const num = parseInt(words[0]);
            const unit = words[1];
            if (unit === 'day' || unit === 'days') {
                totalHours += num * 24;
            } else if (unit === 'hour' || unit === 'hours') {
                totalHours += num;
            } else if (unit === 'minute' || unit === 'minutes') {
                totalHours += num / 60;
            }
        }

        return totalHours.toFixed(2);
    }
    function calculateRate(hr, count) {
        if (hr == 0 || count == 0) {
            return "0 skims per hour!!";
        }
        return ` (${(count/hr).toFixed(2)} skims per hour!!)`;
    }
})();
